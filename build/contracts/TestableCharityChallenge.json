{
  "contractName": "TestableCharityChallenge",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "safetyHatchClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasChallengeAccomplished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_donorAddress",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "challengeName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "donorBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "challengeSafetyHatchTime1",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "challengeEndTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "npoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "challengeSafetyHatchTime2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isEventFinalizedAndValid",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_contractOwner",
          "type": "address"
        },
        {
          "name": "_npoAddress",
          "type": "address"
        },
        {
          "name": "_marketAddress",
          "type": "address"
        },
        {
          "name": "_challengeName",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "npo",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafetyHatchClaimed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_challengeEndTime",
          "type": "uint256"
        }
      ],
      "name": "setChallengeEndTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_challengeSafetyHatchTime1",
          "type": "uint256"
        }
      ],
      "name": "setChallengeSafetyHatchTime1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_challengeSafetyHatchTime2",
          "type": "uint256"
        }
      ],
      "name": "setChallengeSafetyHatchTime2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620014ad380380620014ad833981018060405260808110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080516401000000008111156200006e57600080fd5b828101905060208101848111156200008557600080fd5b8151856001820283011164010000000082111715620000a357600080fd5b505092919050505083838383836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004908051906020019062000148929190620002f3565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663439f5ac26040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200025057600080fd5b505afa15801562000265573d6000803e3d6000fd5b505050506040513d60208110156200027c57600080fd5b810190808051906020019092919050505060058190555062278d006005540160068190555062278d00600654016007819055506000600860006101000a81548160ff0219169083151502179055506000600860016101000a81548160ff0219169083151502179055505050505050505050620003a2565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033657805160ff191683800117855562000367565b8280016001018555821562000367579182015b828111156200036657825182559160200191906001019062000349565b5b5090506200037691906200037a565b5090565b6200039f91905b808211156200039b57600081600090555060010162000381565b5090565b90565b6110fb80620003b26000396000f3fe6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307171d7f146101ae578063306a7ce0146101c55780634bb278f3146101f45780634e71d92d1461020b57806370a0823114610222578063770bd0e31461028757806378bbca82146102c25780637b8c8de11461035257806387730309146103b757806395623641146103e2578063bc3fde4e14610439578063bdcb75fb14610464578063c8e12f14146104bb578063ce606ee0146104f6578063d87a328a1461054d578063dfc39d7714610578578063e8e3ae69146105b3575b600554421115151561010257600080fd5b60003411151561011157600080fd5b34600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040518082815260200191505060405180910390a2005b3480156101ba57600080fd5b506101c36105e2565b005b3480156101d157600080fd5b506101da610775565b604051808215151515815260200191505060405180910390f35b34801561020057600080fd5b50610209610788565b005b34801561021757600080fd5b50610220610939565b005b34801561022e57600080fd5b506102716004803603602081101561024557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a99565b6040518082815260200191505060405180910390f35b34801561029357600080fd5b506102c0600480360360208110156102aa57600080fd5b8101908080359060200190929190505050610b01565b005b3480156102ce57600080fd5b506102d7610b66565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103175780820151818401526020810190506102fc565b50505050905090810190601f1680156103445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035e57600080fd5b506103a16004803603602081101561037557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c04565b6040518082815260200191505060405180910390f35b3480156103c357600080fd5b506103cc610c1c565b6040518082815260200191505060405180910390f35b3480156103ee57600080fd5b506103f7610c22565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044557600080fd5b5061044e610c48565b6040518082815260200191505060405180910390f35b34801561047057600080fd5b50610479610c4e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c757600080fd5b506104f4600480360360208110156104de57600080fd5b8101908080359060200190929190505050610c74565b005b34801561050257600080fd5b5061050b610cd9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055957600080fd5b50610562610cfe565b6040518082815260200191505060405180910390f35b34801561058457600080fd5b506105b16004803603602081101561059b57600080fd5b8101908080359060200190929190505050610d04565b005b3480156105bf57600080fd5b506105c8610d69565b604051808215151515815260200191505060405180910390f35b600754421115156105f257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561064d57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163190506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156106e7573d6000803e3d6000fd5b506001600860026101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1ac1e39f5a410afcc9fd213aab1b92287e00cf00e216f3776f352ab328d124f9826040518082815260200191505060405180910390a250565b600860019054906101000a900460ff1681565b6005544211151561079857600080fd5b60065442111515156107a957600080fd5b600860009054906101000a900460ff161515156107c557600080fd5b60006107cf610d7c565b600860018294508391906101000a81548160ff021916908315150217905550505080151561093657600860019054906101000a900460ff161561091a5760003073ffffffffffffffffffffffffffffffffffffffff16319050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156108a7573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f2a01595cddf097c90216094025db714da3f4e5bd8877b56ba86a24ecead8e543826040518082815260200191505060405180910390a2505b6001600860006101000a81548160ff0219169083151502179055505b50565b6005544211151561094957600080fd5b600860009054906101000a900460ff1680610965575060065442115b151561097057600080fd5b600860019054906101000a900460ff16158061098d575060065442115b151561099857600080fd5b60006109a333610a99565b1115156109af57600080fd5b60006109ba33610a99565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a02573d6000803e3d6000fd5b506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a826040518082815260200191505060405180910390a250565b6000600860029054906101000a900460ff1615610ab95760009050610afc565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5c57600080fd5b8060058190555050565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b505050505081565b60096020528060005260406000206000915090505481565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ccf57600080fd5b8060068190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d5f57600080fd5b8060078190555050565b600860009054906101000a900460ff1681565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d4e40836040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610e0357600080fd5b505afa158015610e17573d6000803e3d6000fd5b505050506040513d6020811015610e2d57600080fd5b8101908080519060200190929190505050156110c257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304be2f506040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610ec757600080fd5b505afa158015610edb573d6000803e3d6000fd5b505050506040513d6020811015610ef157600080fd5b810190808051906020019092919050505015610f145760006001915091506110cb565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c26482060006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610fa657600080fd5b505afa158015610fba573d6000803e3d6000fd5b505050506040513d6020811015610fd057600080fd5b810190808051906020019092919050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c26482060016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561107557600080fd5b505afa158015611089573d6000803e3d6000fd5b505050506040513d602081101561109f57600080fd5b8101908080519060200190929190505050905081811160009350935050506110cb565b60006001915091505b909156fea165627a7a72305820f0ab6e2940f2f290f5c65c8c5a3e6dd0f5ba80ac28d3560ac82c6193b258a4b60029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307171d7f146101ae578063306a7ce0146101c55780634bb278f3146101f45780634e71d92d1461020b57806370a0823114610222578063770bd0e31461028757806378bbca82146102c25780637b8c8de11461035257806387730309146103b757806395623641146103e2578063bc3fde4e14610439578063bdcb75fb14610464578063c8e12f14146104bb578063ce606ee0146104f6578063d87a328a1461054d578063dfc39d7714610578578063e8e3ae69146105b3575b600554421115151561010257600080fd5b60003411151561011157600080fd5b34600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040518082815260200191505060405180910390a2005b3480156101ba57600080fd5b506101c36105e2565b005b3480156101d157600080fd5b506101da610775565b604051808215151515815260200191505060405180910390f35b34801561020057600080fd5b50610209610788565b005b34801561021757600080fd5b50610220610939565b005b34801561022e57600080fd5b506102716004803603602081101561024557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a99565b6040518082815260200191505060405180910390f35b34801561029357600080fd5b506102c0600480360360208110156102aa57600080fd5b8101908080359060200190929190505050610b01565b005b3480156102ce57600080fd5b506102d7610b66565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103175780820151818401526020810190506102fc565b50505050905090810190601f1680156103445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035e57600080fd5b506103a16004803603602081101561037557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c04565b6040518082815260200191505060405180910390f35b3480156103c357600080fd5b506103cc610c1c565b6040518082815260200191505060405180910390f35b3480156103ee57600080fd5b506103f7610c22565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044557600080fd5b5061044e610c48565b6040518082815260200191505060405180910390f35b34801561047057600080fd5b50610479610c4e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c757600080fd5b506104f4600480360360208110156104de57600080fd5b8101908080359060200190929190505050610c74565b005b34801561050257600080fd5b5061050b610cd9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055957600080fd5b50610562610cfe565b6040518082815260200191505060405180910390f35b34801561058457600080fd5b506105b16004803603602081101561059b57600080fd5b8101908080359060200190929190505050610d04565b005b3480156105bf57600080fd5b506105c8610d69565b604051808215151515815260200191505060405180910390f35b600754421115156105f257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561064d57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163190506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156106e7573d6000803e3d6000fd5b506001600860026101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1ac1e39f5a410afcc9fd213aab1b92287e00cf00e216f3776f352ab328d124f9826040518082815260200191505060405180910390a250565b600860019054906101000a900460ff1681565b6005544211151561079857600080fd5b60065442111515156107a957600080fd5b600860009054906101000a900460ff161515156107c557600080fd5b60006107cf610d7c565b600860018294508391906101000a81548160ff021916908315150217905550505080151561093657600860019054906101000a900460ff161561091a5760003073ffffffffffffffffffffffffffffffffffffffff16319050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156108a7573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f2a01595cddf097c90216094025db714da3f4e5bd8877b56ba86a24ecead8e543826040518082815260200191505060405180910390a2505b6001600860006101000a81548160ff0219169083151502179055505b50565b6005544211151561094957600080fd5b600860009054906101000a900460ff1680610965575060065442115b151561097057600080fd5b600860019054906101000a900460ff16158061098d575060065442115b151561099857600080fd5b60006109a333610a99565b1115156109af57600080fd5b60006109ba33610a99565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a02573d6000803e3d6000fd5b506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a826040518082815260200191505060405180910390a250565b6000600860029054906101000a900460ff1615610ab95760009050610afc565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5c57600080fd5b8060058190555050565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b505050505081565b60096020528060005260406000206000915090505481565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ccf57600080fd5b8060068190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d5f57600080fd5b8060078190555050565b600860009054906101000a900460ff1681565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d4e40836040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610e0357600080fd5b505afa158015610e17573d6000803e3d6000fd5b505050506040513d6020811015610e2d57600080fd5b8101908080519060200190929190505050156110c257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304be2f506040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610ec757600080fd5b505afa158015610edb573d6000803e3d6000fd5b505050506040513d6020811015610ef157600080fd5b810190808051906020019092919050505015610f145760006001915091506110cb565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c26482060006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015610fa657600080fd5b505afa158015610fba573d6000803e3d6000fd5b505050506040513d6020811015610fd057600080fd5b810190808051906020019092919050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c26482060016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561107557600080fd5b505afa158015611089573d6000803e3d6000fd5b505050506040513d602081101561109f57600080fd5b8101908080519060200190929190505050905081811160009350935050506110cb565b60006001915091505b909156fea165627a7a72305820f0ab6e2940f2f290f5c65c8c5a3e6dd0f5ba80ac28d3560ac82c6193b258a4b60029",
  "sourceMap": "59:1073:4:-;;;119:290;8:9:-1;5:2;;;30:1;27;20:12;5:2;119:290:4;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;119:290:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;119:290:4;;;;;;310:14;334:11;355:14;379;1023::0;1007:13;;:30;;;;;;;;;;;;;;;;;;1060:11;1047:10;;:24;;;;;;;;;;;;;;;;;;1097:14;1081:13;:30;;;;;;;;;;;;:::i;:::-;;1137:14;1121:13;;:30;;;;;;;;;;;;;;;;;;1178:14;1161:6;;:32;;;;;;;;;;;;;;;;;;1222:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1222:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1222:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1222:19:0;;;;;;;;;;;;;;;;1203:16;:38;;;;1298:7;1279:16;;:26;1251:25;:54;;;;1371:7;1343:25;;:35;1315:25;:63;;;;1415:5;1388:24;;:32;;;;;;;;;;;;;;;;;;1457:5;1430:24;;:32;;;;;;;;;;;;;;;;;;821:648;;;;119:290:4;;;;59:1073;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "59:1073:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:16:0;;1521:3;:23;;1513:32;;;;;;;;1575:1;1563:9;:13;1555:22;;;;;;;;1617:9;1588:13;:25;1602:10;1588:25;;;;;;;;;;;;;;;;:38;;;;;;;;;;;1650:10;1641:31;;;1662:9;1641:31;;;;;;;;;;;;;;;;;;59:1073:4;2952:367:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2952:367:0;;;;;;678:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;678:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:589;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1888:589:0;;;;;;2483:463;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2483:463:0;;;;;;1685:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1685:197:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1685:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:162:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;560:162:4;;;;;;;;;;;;;;;;;;;;469:27:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;469:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;766:48:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;766:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;541:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:40:0;;;;;;;;;;;;;;;;;;;;;;;413:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;503:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:31:0;;;;;;;;;;;;;;;;;;;;;;;373:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;373:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;728:198:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;728:198:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;728:198:4;;;;;;;;;;;;;;;;;;;;330:36:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;330:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;588:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:40:0;;;;;;;;;;;;;;;;;;;;;;;932:198:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;932:198:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;932:198:4;;;;;;;;;;;;;;;;;;;;635:36:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;635:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2952:367;3013:25;;3007:3;:31;2999:40;;;;;;;;3071:13;;;;;;;;;;;3057:27;;:10;:27;;;3049:36;;;;;;;;3096:25;3132:4;3124:21;;;3096:49;;3155:13;;;;;;;;;;;:22;;:45;3186:4;3178:21;;;3155:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3155:45:0;3238:4;3210:25;;:32;;;;;;;;;;;;;;;;;;3276:13;;;;;;;;;;;3257:55;;;3291:20;3257:55;;;;;;;;;;;;;;;;;;2952:367;:::o;678:36::-;;;;;;;;;;;;;:::o;1888:589::-;1941:16;;1935:3;:22;1927:31;;;;;;;;1983:25;;1976:3;:32;;1968:41;;;;;;;;2028:24;;;;;;;;;;;2027:25;2019:34;;;;;;;;2064:13;2126:12;:10;:12::i;:::-;2088:24;;2087:51;;;;;;;;;;;;;;;;;;;;;;;;;;2153:8;2152:9;2148:323;;;2181:24;;;;;;;;;;;2177:239;;;2225:28;2264:4;2256:21;;;2225:52;;2295:10;;;;;;;;;;;:19;;:42;2323:4;2315:21;;;2295:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2295:42:0;2368:10;;;;;;;;;;;2360:41;;;2380:20;2360:41;;;;;;;;;;;;;;;;;;2177:239;;2456:4;2429:24;;:31;;;;;;;;;;;;;;;;;;2148:323;1888:589;:::o;2483:463::-;2533:16;;2527:3;:22;2519:31;;;;;;;;2568:24;;;;;;;;;;;:59;;;;2602:25;;2596:3;:31;2568:59;2560:68;;;;;;;;2647:24;;;;;;;;;;;2646:25;:60;;;;2681:25;;2675:3;:31;2646:60;2638:69;;;;;;;;2749:1;2725:21;2735:10;2725:9;:21::i;:::-;:25;2717:34;;;;;;;;2762:21;2786;2796:10;2786:9;:21::i;:::-;2762:45;;2817:10;:19;;:34;2837:13;2817:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2817:34:0;2889:1;2861:13;:25;2875:10;2861:25;;;;;;;;;;;;;;;:29;;;;2913:10;2905:34;;;2925:13;2905:34;;;;;;;;;;;;;;;;;;2483:463;:::o;1685:197::-;1748:7;1771:25;;;;;;;;;;;1767:64;;;1819:1;1812:8;;;;1767:64;1847:13;:28;1861:13;1847:28;;;;;;;;;;;;;;;;1840:35;;1685:197;;;;:::o;560:162:4:-;655:13;;;;;;;;;;;641:27;;:10;:27;;;633:36;;;;;;;;698:17;679:16;:36;;;;560:162;:::o;469:27:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;766:48::-;;;;;;;;;;;;;;;;;:::o;541:40::-;;;;:::o;413:28::-;;;;;;;;;;;;;:::o;503:31::-;;;;:::o;373:33::-;;;;;;;;;;;;;:::o;728:198:4:-;841:13;;;;;;;;;;;827:27;;:10;:27;;;819:36;;;;;;;;893:26;865:25;:54;;;;728:198;:::o;330:36:0:-;;;;;;;;;;;;;:::o;588:40::-;;;;:::o;932:198:4:-;1045:13;;;;;;;;;;;1031:27;;:10;:27;;;1023:36;;;;;;;;1097:26;1069:25;:54;;;;932:198;:::o;635:36:0:-;;;;;;;;;;;;;:::o;3325:463::-;3369:13;3384:12;3412:6;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3412:20:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3412:20:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3412:20:0;;;;;;;;;;;;;;;;3408:374;;;3452:6;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3452:18:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3452:18:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3452:18:0;;;;;;;;;;;;;;;;3448:273;;;3498:5;3505:4;3490:20;;;;;;3448:273;3549:10;3562:6;;;;;;;;;;;:32;;;3595:1;3562:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3562:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3562:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3562:35:0;;;;;;;;;;;;;;;;3549:48;;3615:11;3629:6;;;;;;;;;;;:32;;;3662:1;3629:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3629:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3629:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3629:35:0;;;;;;;;;;;;;;;;3615:49;;3696:2;3690:3;:8;3700:5;3682:24;;;;;;;;3408:374;3759:5;3766:4;3751:20;;;;3325:463;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./CharityChallenge.sol\";\n\ncontract TestableCharityChallenge is CharityChallenge {\n    constructor(\n        address payable _contractOwner,\n        address payable _npoAddress,\n        address _marketAddress,\n        string memory _challengeName\n    ) CharityChallenge(\n        _contractOwner,\n        _npoAddress,\n        _marketAddress,\n        _challengeName\n    ) public {}\n\n    ///////////////////////////////////////////\n    // FUNCTIONS BELOW ARE USED FOR TESTING  //\n    ///////////////////////////////////////////\n\n    function setChallengeEndTime(uint256 _challengeEndTime) public {\n        require(msg.sender == contractOwner);\n        challengeEndTime = _challengeEndTime;\n    }\n\n    function setChallengeSafetyHatchTime1(uint256 _challengeSafetyHatchTime1) public {\n        require(msg.sender == contractOwner);\n        challengeSafetyHatchTime1 = _challengeSafetyHatchTime1;\n    }\n\n    function setChallengeSafetyHatchTime2(uint256 _challengeSafetyHatchTime2) public {\n        require(msg.sender == contractOwner);\n        challengeSafetyHatchTime2 = _challengeSafetyHatchTime2;\n    }\n}",
  "sourcePath": "/Users/tuyennguyen/Projects/charity-challenge/charity-challenge-contract/contracts/TestableCharityChallenge.sol",
  "ast": {
    "absolutePath": "/Users/tuyennguyen/Projects/charity-challenge/charity-challenge-contract/contracts/TestableCharityChallenge.sol",
    "exportedSymbols": {
      "TestableCharityChallenge": [
        634
      ]
    },
    "id": 635,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 561,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/tuyennguyen/Projects/charity-challenge/charity-challenge-contract/contracts/CharityChallenge.sol",
        "file": "./CharityChallenge.sol",
        "id": 562,
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 380,
        "src": "25:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 563,
              "name": "CharityChallenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 379,
              "src": "96:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CharityChallenge_$379",
                "typeString": "contract CharityChallenge"
              }
            },
            "id": 564,
            "nodeType": "InheritanceSpecifier",
            "src": "96:16:4"
          }
        ],
        "contractDependencies": [
          379
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 634,
        "linearizedBaseContracts": [
          634,
          379
        ],
        "name": "TestableCharityChallenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "407:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 582,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 575,
                    "name": "_contractOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 566,
                    "src": "310:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 576,
                    "name": "_npoAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 568,
                    "src": "334:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 577,
                    "name": "_marketAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 570,
                    "src": "355:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 578,
                    "name": "_challengeName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 572,
                    "src": "379:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 574,
                  "name": "CharityChallenge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 379,
                  "src": "284:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CharityChallenge_$379_$",
                    "typeString": "type(contract CharityChallenge)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "284:115:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "name": "_contractOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "140:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "name": "_npoAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "180:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 570,
                  "name": "_marketAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "217:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 572,
                  "name": "_challengeName",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "249:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "130:153:4"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:4"
            },
            "scope": 634,
            "src": "119:290:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "623:99:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "641:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "641:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "655:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "641:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        652,
                        653
                      ],
                      "referencedDeclaration": 652,
                      "src": "633:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "633:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "challengeEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "679:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "_challengeEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "698:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "679:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "679:36:4"
                }
              ]
            },
            "documentation": "////////////////////////////////////////",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setChallengeEndTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "name": "_challengeEndTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "589:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:27:4"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:4"
            },
            "scope": 634,
            "src": "560:162:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "809:117:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 605,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "827:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "827:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 607,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "841:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "827:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        652,
                        653
                      ],
                      "referencedDeclaration": 652,
                      "src": "819:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "819:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "challengeSafetyHatchTime1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "865:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "_challengeSafetyHatchTime1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "893:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "865:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "865:54:4"
                }
              ]
            },
            "documentation": null,
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setChallengeSafetyHatchTime1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "name": "_challengeSafetyHatchTime1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "766:34:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:36:4"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:4"
            },
            "scope": 634,
            "src": "728:198:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "1013:117:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "1031:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1031:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 624,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1045:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1031:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        652,
                        653
                      ],
                      "referencedDeclaration": 652,
                      "src": "1023:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 628,
                      "name": "challengeSafetyHatchTime2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1069:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 629,
                      "name": "_challengeSafetyHatchTime2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "1097:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1069:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:54:4"
                }
              ]
            },
            "documentation": null,
            "id": 633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setChallengeSafetyHatchTime2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "name": "_challengeSafetyHatchTime2",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "970:34:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "969:36:4"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:4"
            },
            "scope": 634,
            "src": "932:198:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 635,
        "src": "59:1073:4"
      }
    ],
    "src": "0:1132:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/tuyennguyen/Projects/charity-challenge/charity-challenge-contract/contracts/TestableCharityChallenge.sol",
    "exportedSymbols": {
      "TestableCharityChallenge": [
        634
      ]
    },
    "id": 635,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 561,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/tuyennguyen/Projects/charity-challenge/charity-challenge-contract/contracts/CharityChallenge.sol",
        "file": "./CharityChallenge.sol",
        "id": 562,
        "nodeType": "ImportDirective",
        "scope": 635,
        "sourceUnit": 380,
        "src": "25:32:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 563,
              "name": "CharityChallenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 379,
              "src": "96:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CharityChallenge_$379",
                "typeString": "contract CharityChallenge"
              }
            },
            "id": 564,
            "nodeType": "InheritanceSpecifier",
            "src": "96:16:4"
          }
        ],
        "contractDependencies": [
          379
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 634,
        "linearizedBaseContracts": [
          634,
          379
        ],
        "name": "TestableCharityChallenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "407:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 582,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 575,
                    "name": "_contractOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 566,
                    "src": "310:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 576,
                    "name": "_npoAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 568,
                    "src": "334:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 577,
                    "name": "_marketAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 570,
                    "src": "355:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 578,
                    "name": "_challengeName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 572,
                    "src": "379:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 574,
                  "name": "CharityChallenge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 379,
                  "src": "284:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CharityChallenge_$379_$",
                    "typeString": "type(contract CharityChallenge)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "284:115:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "name": "_contractOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "140:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "name": "_npoAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "180:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 570,
                  "name": "_marketAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "217:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 572,
                  "name": "_challengeName",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "249:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "130:153:4"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:4"
            },
            "scope": 634,
            "src": "119:290:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "623:99:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "641:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "641:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "655:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "641:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        652,
                        653
                      ],
                      "referencedDeclaration": 652,
                      "src": "633:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "633:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "challengeEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "679:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "_challengeEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "698:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "679:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "679:36:4"
                }
              ]
            },
            "documentation": "////////////////////////////////////////",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setChallengeEndTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "name": "_challengeEndTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "589:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:27:4"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:4"
            },
            "scope": 634,
            "src": "560:162:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "809:117:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 605,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "827:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "827:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 607,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "841:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "827:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        652,
                        653
                      ],
                      "referencedDeclaration": 652,
                      "src": "819:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "819:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "challengeSafetyHatchTime1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "865:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "_challengeSafetyHatchTime1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "893:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "865:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "865:54:4"
                }
              ]
            },
            "documentation": null,
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setChallengeSafetyHatchTime1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "name": "_challengeSafetyHatchTime1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "766:34:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:36:4"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:4"
            },
            "scope": 634,
            "src": "728:198:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "1013:117:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "1031:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1031:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 624,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1045:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1031:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        652,
                        653
                      ],
                      "referencedDeclaration": 652,
                      "src": "1023:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 628,
                      "name": "challengeSafetyHatchTime2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1069:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 629,
                      "name": "_challengeSafetyHatchTime2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 618,
                      "src": "1097:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1069:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:54:4"
                }
              ]
            },
            "documentation": null,
            "id": 633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setChallengeSafetyHatchTime2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "name": "_challengeSafetyHatchTime2",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "970:34:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "969:36:4"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:4"
            },
            "scope": 634,
            "src": "932:198:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 635,
        "src": "59:1073:4"
      }
    ],
    "src": "0:1132:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-02-14T03:09:37.602Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "setChallengeEndTime(uint256)": {
        "notice": "////////////////////////////////////////"
      }
    }
  }
}